---
# tasks file for monitor

- name: Get PID for each Monad service
  ansible.builtin.shell: "systemctl show {{ item }} -p MainPID --value"
  loop: "{{ services }}"
  register: service_pids
  changed_when: false
  failed_when: false

- name: Create a list of fetched PIDs
  ansible.builtin.set_fact:
    pids_to_monitor: "{{ service_pids.results | map(attribute='stdout') | list }}"

- name: Check if there are valid PIDs to monitor
  ansible.builtin.fail:
    msg: "No running Monad services found to monitor."
  when: pids_to_monitor | reject('==', '') | list | length == 0

- name: Execute the monitoring script in the correct directory
  ansible.builtin.command: >
    {{ remote_monitor_script_path }} {{ monitoring_duration }} {{ pids_to_monitor | join(' ') }}
  register: monitor_script_output
  args:
    chdir: "{{ working_dir }}"

- name: Download the log directory to the local machine using scp
  block:
    - name: Ensure destination directory exists on the local machine
      ansible.builtin.file:
        path: "{{ local_log_save_path }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true

    - name: Copy the log directory from remote to local via scp
      ansible.builtin.shell:
        cmd: >
          scp -r -i {{ ansible_ssh_private_key_file }} 
          {{ ansible_user }}@{{ ansible_host }}:{{ working_dir }}/monitoring_logs
          {{ local_log_save_path }}/
      delegate_to: localhost

- name: Clean up the log directory on the remote server
  when:
    - cleanup_remote_logs
  ansible.builtin.file:
    path: "{{ working_dir }}/monitoring_logs"
    state: absent
